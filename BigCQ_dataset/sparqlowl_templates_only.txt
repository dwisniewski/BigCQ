ASK WHERE { <c1> owl:equivalentClass <c2> . }
ASK WHERE { <c1> owl:equivalentClass [ owl:complementOf <c2> ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> <c3> ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] [ rdf:type owl:Restriction ; owl:onProperty <dp2> ; owl:hasValue <dt2> ] ) ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c4> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:allValuesFrom <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:allValuesFrom <c6> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <i1> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c5> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] ) ] ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ owl:intersectionOf ( <c5> [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ] ) ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ owl:intersectionOf ( <c5> [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ) ] ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <i1> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ owl:complementOf <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c4> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ owl:complementOf [ owl:unionOf rdf:nil ] ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ owl:unionOf rdf:nil ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c3> ] ) ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf rdf:nil ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:hasValue <c6> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ owl:intersectionOf rdf:nil ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ] ) ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ) ] ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:unionOf ( <c3> <c4> ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <i2> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <i1> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:hasValue <i1> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:oneOf rdf:nil ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:unionOf ( [ owl:intersectionOf ( [ owl:unionOf rdf:nil ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:unionOf rdf:nil ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c2> ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:unionOf ( <c2> <c3> ) ] ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ) ] ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ) ] ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
ASK WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c2> ] ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ owl:intersectionOf rdf:nil ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf rdf:nil ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:unionOf rdf:nil ] . }
ASK WHERE { <c1> rdfs:subClassOf [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:allValuesFrom [ owl:oneOf rdf:nil ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c2> ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:complementOf <c2> ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:oneOf rdf:nil ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:unionOf ( <c2> <c3> ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:unionOf rdf:nil ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "0"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "1"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "999"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <i1> ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ owl:complementOf <c3> ] [ owl:complementOf <c4> ] ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] ) ] ] ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf ( <c2> <c3> ) ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c2> ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c2> ] ] . }
ASK WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
ASK WHERE { <c2> owl:equivalentClass <c1> . }
ASK WHERE { <c2> rdfs:subClassOf <c2> . }
ASK WHERE { [ owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ; owl:intersectionOf ( [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c1> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ owl:complementOf ?x ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ owl:complementOf <c3> ] [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c4> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom ?x ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom ?x ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom <c2> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c2> ] ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> owl:equivalentClass ?x . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom ?x ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue ?x ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:complementOf ?x ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom ?x ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue ?x ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom ?x ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:allValuesFrom [ owl:complementOf <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:cardinality "0"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:cardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:cardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:hasValue <c2> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:hasValue <dt1> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:hasValue <i1> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom <c2> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ owl:complementOf <c3> ] [ owl:complementOf <c4> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] ) ] ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:unionOf ( <c2> <c3> ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { <c2> owl:equivalentClass ?x . }
SELECT (COUNT(?x) AS ?cnt) WHERE { [ owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom ?x ] ; owl:intersectionOf ( [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c1> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { [ owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom <c3> ] ; owl:intersectionOf ( [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c1> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass <c1> . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass <c2> . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:complementOf <c2> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> <c3> ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] [ rdf:type owl:Restriction ; owl:onProperty <dp2> ; owl:hasValue <dt2> ] ) ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c4> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:allValuesFrom <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:allValuesFrom <c6> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <i1> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c5> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] ) ] ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ owl:intersectionOf ( <c5> [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ] ) ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ owl:intersectionOf ( <c5> [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ) ] ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <i1> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ owl:complementOf <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c4> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ owl:complementOf [ owl:unionOf rdf:nil ] ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ owl:unionOf rdf:nil ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c3> ] ) ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf rdf:nil ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:hasValue <c6> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ owl:intersectionOf rdf:nil ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ] ) ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ) ] ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:unionOf ( <c3> <c4> ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <i2> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <i1> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:hasValue <i1> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:oneOf rdf:nil ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:unionOf ( [ owl:intersectionOf ( [ owl:unionOf rdf:nil ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:unionOf rdf:nil ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c2> ] ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ owl:intersectionOf rdf:nil ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf rdf:nil ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:unionOf rdf:nil ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:complementOf <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "0"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <i1> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ owl:complementOf <c3> ] [ owl:complementOf <c4> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] ) ] ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf ( <c2> <c3> ) ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
SELECT (COUNT(?x) AS ?cnt) WHERE { ?x rdfs:subClassOf ?x . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ owl:complementOf ?x ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ owl:complementOf <c3> ] [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c4> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom ?x ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom ?x ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom <c2> ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ) ] ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c2> ] ] ] . }
SELECT ?x WHERE { <c1> owl:equivalentClass ?x . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom ?x ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom <c2> ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue ?x ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:complementOf ?x ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom ?x ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue ?x ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom ?x ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:allValuesFrom [ owl:complementOf <c2> ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:cardinality "0"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:cardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:cardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:hasValue <c2> ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:hasValue <dt1> ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:hasValue <i1> ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom <c2> ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ owl:complementOf <c3> ] [ owl:complementOf <c4> ] ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] ) ] ] ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:unionOf ( <c2> <c3> ) ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c2> ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c2> ] ] . }
SELECT ?x WHERE { <c1> rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
SELECT ?x WHERE { <c2> owl:equivalentClass ?x . }
SELECT ?x WHERE { [ owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom ?x ] ; owl:intersectionOf ( [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c1> ] ) ] . }
SELECT ?x WHERE { [ owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty ?x ; owl:someValuesFrom <c3> ] ; owl:intersectionOf ( [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c1> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass <c1> . }
SELECT ?x WHERE { ?x owl:equivalentClass <c2> . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:complementOf <c2> ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> <c3> ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] [ rdf:type owl:Restriction ; owl:onProperty <dp2> ; owl:hasValue <dt2> ] ) ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c4> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:allValuesFrom <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:allValuesFrom <c6> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <i1> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c5> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c4> ] ) ] ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ owl:intersectionOf ( <c5> [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ] ) ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ owl:intersectionOf ( <c5> [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ) ] ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c3> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <i1> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ owl:complementOf <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c4> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ owl:complementOf [ owl:unionOf rdf:nil ] ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ owl:unionOf rdf:nil ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c3> ] ) ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf rdf:nil ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:onClass <c3> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:onClass <c4> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:onClass <c5> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:onClass <c6> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op6> ; owl:onClass <c7> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:hasValue <c6> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c6> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ owl:intersectionOf rdf:nil ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ] ) ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ owl:intersectionOf ( <c4> [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ) ] ] ] ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:unionOf ( <c3> <c4> ) ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <i2> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <i1> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:hasValue <i1> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op5> ; owl:someValuesFrom <c5> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:oneOf rdf:nil ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:unionOf ( [ owl:intersectionOf ( [ owl:unionOf rdf:nil ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:unionOf rdf:nil ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c4> ] ) ] ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ) ] ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
SELECT ?x WHERE { ?x owl:equivalentClass [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c2> ] ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:complementOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ owl:intersectionOf rdf:nil ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf rdf:nil ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:hasValue <c5> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:hasValue <c4> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "2"^^xsd:nonNegativeInteger ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c3> ] ] [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:unionOf rdf:nil ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ owl:unionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:allValuesFrom [ owl:complementOf <c2> ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "0"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:cardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <c2> ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:hasValue <i1> ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:maxCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:minCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass <c2> ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:minQualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:intersectionOf rdf:nil ] ; owl:qualifiedCardinality "999"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:onClass [ owl:unionOf rdf:nil ] ; owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom <c2> ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ owl:complementOf <c3> ] [ owl:complementOf <c4> ] ) ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <dp1> ; owl:hasValue <dt1> ] ) ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c3> ] ) ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] ) ] ] ) ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( <c2> [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf ( <c3> [ rdf:type owl:Restriction ; owl:onProperty <op3> ; owl:someValuesFrom <c4> ] [ rdf:type owl:Restriction ; owl:onProperty <op4> ; owl:someValuesFrom <c5> ] ) ] ] ) ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom [ owl:intersectionOf rdf:nil ] ] ) ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf ( <c2> <c3> ) ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ owl:unionOf rdf:nil ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:allValuesFrom <c2> ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:hasValue <c2> ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf [ rdf:type owl:Restriction ; owl:onProperty <op1> ; owl:someValuesFrom [ rdf:type owl:Restriction ; owl:onProperty <op2> ; owl:someValuesFrom <c2> ] ] . }
SELECT ?x WHERE { ?x rdfs:subClassOf ?x . }
